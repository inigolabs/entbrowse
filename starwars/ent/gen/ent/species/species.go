// Code generated by entc, DO NOT EDIT.

package species

const (
	// Label holds the string label denoting the species type in the database.
	Label = "species"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAverageHeight holds the string denoting the average_height field in the database.
	FieldAverageHeight = "average_height"
	// FieldAverageLifespan holds the string denoting the average_lifespan field in the database.
	FieldAverageLifespan = "average_lifespan"
	// FieldClassification holds the string denoting the classification field in the database.
	FieldClassification = "classification"
	// FieldDesignation holds the string denoting the designation field in the database.
	FieldDesignation = "designation"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSkinColor holds the string denoting the skin_color field in the database.
	FieldSkinColor = "skin_color"
	// FieldEyeColor holds the string denoting the eye_color field in the database.
	FieldEyeColor = "eye_color"
	// FieldHairColor holds the string denoting the hair_color field in the database.
	FieldHairColor = "hair_color"
	// FieldLanguage holds the string denoting the language field in the database.
	FieldLanguage = "language"
	// EdgeOriginatesFrom holds the string denoting the originates_from edge name in mutations.
	EdgeOriginatesFrom = "originates_from"
	// EdgeAppearedIn holds the string denoting the appeared_in edge name in mutations.
	EdgeAppearedIn = "appeared_in"
	// EdgeIncludesPerson holds the string denoting the includes_person edge name in mutations.
	EdgeIncludesPerson = "includes_person"
	// Table holds the table name of the species in the database.
	Table = "species"
	// OriginatesFromTable is the table that holds the originates_from relation/edge. The primary key declared below.
	OriginatesFromTable = "species_originates_from"
	// OriginatesFromInverseTable is the table name for the Planet entity.
	// It exists in this package in order to avoid circular dependency with the "planet" package.
	OriginatesFromInverseTable = "planets"
	// AppearedInTable is the table that holds the appeared_in relation/edge. The primary key declared below.
	AppearedInTable = "film_has_species"
	// AppearedInInverseTable is the table name for the Film entity.
	// It exists in this package in order to avoid circular dependency with the "film" package.
	AppearedInInverseTable = "films"
	// IncludesPersonTable is the table that holds the includes_person relation/edge. The primary key declared below.
	IncludesPersonTable = "person_is_of_type"
	// IncludesPersonInverseTable is the table name for the Person entity.
	// It exists in this package in order to avoid circular dependency with the "person" package.
	IncludesPersonInverseTable = "persons"
)

// Columns holds all SQL columns for species fields.
var Columns = []string{
	FieldID,
	FieldAverageHeight,
	FieldAverageLifespan,
	FieldClassification,
	FieldDesignation,
	FieldName,
	FieldSkinColor,
	FieldEyeColor,
	FieldHairColor,
	FieldLanguage,
}

var (
	// OriginatesFromPrimaryKey and OriginatesFromColumn2 are the table columns denoting the
	// primary key for the originates_from relation (M2M).
	OriginatesFromPrimaryKey = []string{"species_id", "planet_id"}
	// AppearedInPrimaryKey and AppearedInColumn2 are the table columns denoting the
	// primary key for the appeared_in relation (M2M).
	AppearedInPrimaryKey = []string{"film_id", "species_id"}
	// IncludesPersonPrimaryKey and IncludesPersonColumn2 are the table columns denoting the
	// primary key for the includes_person relation (M2M).
	IncludesPersonPrimaryKey = []string{"person_id", "species_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
