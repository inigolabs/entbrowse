// Code generated by entc, DO NOT EDIT.

package vehicle

const (
	// Label holds the string label denoting the vehicle type in the database.
	Label = "vehicle"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCargoCapacity holds the string denoting the cargo_capacity field in the database.
	FieldCargoCapacity = "cargo_capacity"
	// FieldConsumables holds the string denoting the consumables field in the database.
	FieldConsumables = "consumables"
	// FieldCostInCredits holds the string denoting the cost_in_credits field in the database.
	FieldCostInCredits = "cost_in_credits"
	// FieldCrew holds the string denoting the crew field in the database.
	FieldCrew = "crew"
	// FieldLength holds the string denoting the length field in the database.
	FieldLength = "length"
	// FieldManufacturer holds the string denoting the manufacturer field in the database.
	FieldManufacturer = "manufacturer"
	// FieldMaxAtmospheringSpeed holds the string denoting the max_atmosphering_speed field in the database.
	FieldMaxAtmospheringSpeed = "max_atmosphering_speed"
	// FieldModel holds the string denoting the model field in the database.
	FieldModel = "model"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPassengerCapacity holds the string denoting the passenger_capacity field in the database.
	FieldPassengerCapacity = "passenger_capacity"
	// EdgeAppearedIn holds the string denoting the appeared_in edge name in mutations.
	EdgeAppearedIn = "appeared_in"
	// EdgePilotedBy holds the string denoting the piloted_by edge name in mutations.
	EdgePilotedBy = "piloted_by"
	// Table holds the table name of the vehicle in the database.
	Table = "vehicles"
	// AppearedInTable is the table that holds the appeared_in relation/edge. The primary key declared below.
	AppearedInTable = "film_has_vehicle"
	// AppearedInInverseTable is the table name for the Film entity.
	// It exists in this package in order to avoid circular dependency with the "film" package.
	AppearedInInverseTable = "films"
	// PilotedByTable is the table that holds the piloted_by relation/edge. The primary key declared below.
	PilotedByTable = "person_piloted_vehicle"
	// PilotedByInverseTable is the table name for the Person entity.
	// It exists in this package in order to avoid circular dependency with the "person" package.
	PilotedByInverseTable = "persons"
)

// Columns holds all SQL columns for vehicle fields.
var Columns = []string{
	FieldID,
	FieldCargoCapacity,
	FieldConsumables,
	FieldCostInCredits,
	FieldCrew,
	FieldLength,
	FieldManufacturer,
	FieldMaxAtmospheringSpeed,
	FieldModel,
	FieldName,
	FieldPassengerCapacity,
}

var (
	// AppearedInPrimaryKey and AppearedInColumn2 are the table columns denoting the
	// primary key for the appeared_in relation (M2M).
	AppearedInPrimaryKey = []string{"film_id", "vehicle_id"}
	// PilotedByPrimaryKey and PilotedByColumn2 are the table columns denoting the
	// primary key for the piloted_by relation (M2M).
	PilotedByPrimaryKey = []string{"person_id", "vehicle_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
